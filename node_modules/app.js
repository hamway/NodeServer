var fs = require('fs');
var util = require('util');
var api = require('api');
var path = require('path');
var url = require('url');
var os = require('os');

/**
 * @TODO: Create module config
 * @type {*}
 */
exports.home = process.cwd();
exports.public = path.join(process.cwd(), '/public');
exports.configdir = path.join(this.home, '/config');
exports.configfile = path.join(this.configdir, '/config.json');
exports.config = null;

exports.prepare = function () {
    util.debug('Read config...');
    if (!fs.existsSync(this.configdir)) {
        process.on('exit', function () {
            util.error('Config directory not found');
        });
    }
    if (!fs.existsSync(this.configfile)) {
        process.on('exit', function () {
            util.error('Config file not found');
        });
    }
    var config = JSON.parse(fs.readFileSync(this.configfile));

    if (config.debug) {
        //var debug = require('debug');
    }

    var args = process.argv;

    if (args[2]) config.http.host = args[2];
    if (args[3]) config.http.port = args[3];

    this.config = config;
};

exports.setServer = function() {
    api.res.setHeader('Server', this.config.serverName);
}

exports.favicon = function() {
    var favicon = path.join(this.public,'/favicon.ico');
    this.getPublicFile(favicon, {"type":'image/x-icon',"mode":'binary'});
}

exports.call = function() {
    var params = url.parse(api.url);
    switch (params.pathname) {
        case "/":
            var index = path.join(this.public, this.config.index);
            this.getPublicFile(index);
            break;
        case "/status":
            this.getStatus()
            break;
        default:
            api.res.writeHead(200, {'Content-Type': 'text/plain'});
            api.res.write('Api method not registred');
            util.error('Api method not registred');
    }
    /**
     * @TODO: Add logger module
     */
    //console.log(params);
}

exports.getStatus = function() {
    var text = os.hostname() + os.EOL;
    text += os.cpus() + os.EOL;
    this.sendClient(text);
}

exports.sendClient = function(text) {
    api.res.writeHead(200, {'Content-Type': 'text/plain'});
    api.res.write(text, 'utf-8');
}

exports.getPublicFile = function(filepath,content) {
    if (filepath == undefined) this.destroy('Wrong file request');
    if(content == undefined) {
        content = {
            "type":'text/html',
            "mode":"utf-8"
        }
    } else {
        if(content.type == undefined) {
            content.type = 'text/html'
        }
        if(content.mode == undefined) {
            content.mode = 'utf-8'
        }
    }

    fs.exists(filepath,function(exists){
        if(exists) {
            api.res.writeHead(200, {'Content-Type': content.type});
            api.res.write(fs.readFileSync(filepath, content.mode), content.mode);
        } else {
            debugger;
            api.res.writeHead(404);
        }
    });
}

exports.destroy = function(message) {
    process.on('exit', function () {
        util.error(message);
    });
}